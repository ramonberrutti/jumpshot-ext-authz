// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: storage/team.proto

package storage

import (
	v1 "github.com/ramonberrutti/jumpshot/protogen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Team_Player_Role int32

const (
	Team_Player_TEAM_PLAYER_ROLE_INVALID Team_Player_Role = 0
	// ADMIN role can manage everything in the team.
	Team_Player_ADMIN Team_Player_Role = 1
	// MANAGER equal of manager but can't remove any admin.
	Team_Player_MANAGER Team_Player_Role = 2
	// CAPTAIN can do match administrative stuff.
	Team_Player_CAPTAIN Team_Player_Role = 3
	// PLAYER is the lowest priviledged access.
	Team_Player_PLAYER Team_Player_Role = 4
)

// Enum value maps for Team_Player_Role.
var (
	Team_Player_Role_name = map[int32]string{
		0: "TEAM_PLAYER_ROLE_INVALID",
		1: "ADMIN",
		2: "MANAGER",
		3: "CAPTAIN",
		4: "PLAYER",
	}
	Team_Player_Role_value = map[string]int32{
		"TEAM_PLAYER_ROLE_INVALID": 0,
		"ADMIN":                    1,
		"MANAGER":                  2,
		"CAPTAIN":                  3,
		"PLAYER":                   4,
	}
)

func (x Team_Player_Role) Enum() *Team_Player_Role {
	p := new(Team_Player_Role)
	*p = x
	return p
}

func (x Team_Player_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Team_Player_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_team_proto_enumTypes[0].Descriptor()
}

func (Team_Player_Role) Type() protoreflect.EnumType {
	return &file_storage_team_proto_enumTypes[0]
}

func (x Team_Player_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Team_Player_Role.Descriptor instead.
func (Team_Player_Role) EnumDescriptor() ([]byte, []int) {
	return file_storage_team_proto_rawDescGZIP(), []int{0, 0, 0}
}

// Team represent a entire team that will compite in a tournament.
type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id generated UUID identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name contain the display name for the team.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// description contain a long description for the team.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// tag contain a short name for the team.
	Tag        string                 `protobuf:"bytes,9,opt,name=tag,proto3" json:"tag,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Version    uint64                 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// created_by contain the id of the user that create the team.
	CreatedBy string `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// players contain the list of the players for the team.
	Players []*Team_Player `protobuf:"bytes,8,rep,name=players,proto3" json:"players,omitempty"`
	// reserved for players invitation.
	Invitations []*v1.Team_PlayerInvitation `protobuf:"bytes,10,rep,name=invitations,proto3" json:"invitations,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_storage_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_storage_team_proto_rawDescGZIP(), []int{0}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Team) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Team) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Team) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Team) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Team) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Team) GetPlayers() []*Team_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Team) GetInvitations() []*v1.Team_PlayerInvitation {
	if x != nil {
		return x.Invitations
	}
	return nil
}

// TeamName associate a team id with a name.
type TeamName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TeamName) Reset() {
	*x = TeamName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamName) ProtoMessage() {}

func (x *TeamName) ProtoReflect() protoreflect.Message {
	mi := &file_storage_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamName.ProtoReflect.Descriptor instead.
func (*TeamName) Descriptor() ([]byte, []int) {
	return file_storage_team_proto_rawDescGZIP(), []int{1}
}

func (x *TeamName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// TeamPlayer contain the list of teams that a player is part of.
type TeamPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Teams      []*TeamPlayer_Team     `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	Version    uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *TeamPlayer) Reset() {
	*x = TeamPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_team_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamPlayer) ProtoMessage() {}

func (x *TeamPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_storage_team_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamPlayer.ProtoReflect.Descriptor instead.
func (*TeamPlayer) Descriptor() ([]byte, []int) {
	return file_storage_team_proto_rawDescGZIP(), []int{2}
}

func (x *TeamPlayer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamPlayer) GetTeams() []*TeamPlayer_Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *TeamPlayer) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TeamPlayer) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Player contain the list of player (users) for the team.
type Team_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id contain the user id.
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JoinTime  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	LeaveTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=leave_time,json=leaveTime,proto3" json:"leave_time,omitempty"`
	Roles     []Team_Player_Role     `protobuf:"varint,4,rep,packed,name=roles,proto3,enum=storage.Team_Player_Role" json:"roles,omitempty"`
	// synced is used to indicate that the player is in sync with the own list.
	Synced bool `protobuf:"varint,5,opt,name=synced,proto3" json:"synced,omitempty"`
}

func (x *Team_Player) Reset() {
	*x = Team_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_team_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team_Player) ProtoMessage() {}

func (x *Team_Player) ProtoReflect() protoreflect.Message {
	mi := &file_storage_team_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team_Player.ProtoReflect.Descriptor instead.
func (*Team_Player) Descriptor() ([]byte, []int) {
	return file_storage_team_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Team_Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team_Player) GetJoinTime() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinTime
	}
	return nil
}

func (x *Team_Player) GetLeaveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LeaveTime
	}
	return nil
}

func (x *Team_Player) GetRoles() []Team_Player_Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Team_Player) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

type TeamPlayer_Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TeamPlayer_Team) Reset() {
	*x = TeamPlayer_Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_team_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamPlayer_Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamPlayer_Team) ProtoMessage() {}

func (x *TeamPlayer_Team) ProtoReflect() protoreflect.Message {
	mi := &file_storage_team_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamPlayer_Team.ProtoReflect.Descriptor instead.
func (*TeamPlayer_Team) Descriptor() ([]byte, []int) {
	return file_storage_team_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TeamPlayer_Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_storage_team_proto protoreflect.FileDescriptor

var file_storage_team_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x05, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xac, 0x02, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79,
	0x6e, 0x63, 0x65, 0x64, 0x22, 0x55, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x50, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x04, 0x22, 0x2e, 0x0a, 0x08, 0x54,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0a,
	0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0x16, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x88, 0x01, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6d, 0x6f, 0x6e, 0x62, 0x65, 0x72, 0x72, 0x75, 0x74, 0x74, 0x69,
	0x2f, 0x6a, 0x75, 0x6d, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58,
	0xaa, 0x02, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0xca, 0x02, 0x07, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0xe2, 0x02, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storage_team_proto_rawDescOnce sync.Once
	file_storage_team_proto_rawDescData = file_storage_team_proto_rawDesc
)

func file_storage_team_proto_rawDescGZIP() []byte {
	file_storage_team_proto_rawDescOnce.Do(func() {
		file_storage_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_team_proto_rawDescData)
	})
	return file_storage_team_proto_rawDescData
}

var file_storage_team_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_team_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_storage_team_proto_goTypes = []interface{}{
	(Team_Player_Role)(0),            // 0: storage.Team.Player.Role
	(*Team)(nil),                     // 1: storage.Team
	(*TeamName)(nil),                 // 2: storage.TeamName
	(*TeamPlayer)(nil),               // 3: storage.TeamPlayer
	(*Team_Player)(nil),              // 4: storage.Team.Player
	(*TeamPlayer_Team)(nil),          // 5: storage.TeamPlayer.Team
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
	(*v1.Team_PlayerInvitation)(nil), // 7: common.v1.Team.PlayerInvitation
}
var file_storage_team_proto_depIdxs = []int32{
	6, // 0: storage.Team.create_time:type_name -> google.protobuf.Timestamp
	6, // 1: storage.Team.update_time:type_name -> google.protobuf.Timestamp
	4, // 2: storage.Team.players:type_name -> storage.Team.Player
	7, // 3: storage.Team.invitations:type_name -> common.v1.Team.PlayerInvitation
	5, // 4: storage.TeamPlayer.teams:type_name -> storage.TeamPlayer.Team
	6, // 5: storage.TeamPlayer.update_time:type_name -> google.protobuf.Timestamp
	6, // 6: storage.Team.Player.join_time:type_name -> google.protobuf.Timestamp
	6, // 7: storage.Team.Player.leave_time:type_name -> google.protobuf.Timestamp
	0, // 8: storage.Team.Player.roles:type_name -> storage.Team.Player.Role
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_storage_team_proto_init() }
func file_storage_team_proto_init() {
	if File_storage_team_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storage_team_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_team_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_team_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_team_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_team_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamPlayer_Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_team_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_team_proto_goTypes,
		DependencyIndexes: file_storage_team_proto_depIdxs,
		EnumInfos:         file_storage_team_proto_enumTypes,
		MessageInfos:      file_storage_team_proto_msgTypes,
	}.Build()
	File_storage_team_proto = out.File
	file_storage_team_proto_rawDesc = nil
	file_storage_team_proto_goTypes = nil
	file_storage_team_proto_depIdxs = nil
}
