// Code generated by protoc-gen-jumpshot. DO NOT EDIT.
// source: storage/user.proto

package storage

import (
	"context"

	"google.golang.org/grpc"
)

var _ = context.Background()
var _ = grpc.ServiceRegistrar(nil)

func (m *User_Password_Credential_Flags) JumpShotIndexClear() {
	// m.UserPresent = false
	// m.UserVerified = false
	// m.BackupEligible = false
	// m.BackupState = false
}

func (m *User_Password_Credential_Authenticator) JumpShotIndexClear() {
	// m.Aaguid = nil
	// m.SignCount = 0
	// m.CloneWarning = false
	// m.Attachment = ""
}

func (m *User_Password_Credential) JumpShotIndexClear() {
	// m.Id = nil
	// m.PublicKey = nil
	// m.AttestationType = ""
	// m.Transports = nil
	if m, ok := interface{}(m.Flags).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.Authenticator).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.Name = ""
	if m, ok := interface{}(m.CreateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *User_Password) JumpShotIndexClear() {
	m.Value = nil

	if m, ok := interface{}(m.UpdateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.WebauthnCredentials).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.ValidateToken = ""
}

func (m *User_Provider) JumpShotIndexClear() {
	// m.Provider = ""
	// m.Key = ""
	if m, ok := interface{}(m.Metadata).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.CreateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *User_InternalMetadata) JumpShotIndexClear() {
	if m, ok := interface{}(m.LastSendValidateEmail).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.LastSendResetPassword).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *User) JumpShotIndexClear() {
	// m.Id = ""
	// m.Name = ""
	// m.Email = ""
	if m, ok := interface{}(m.Password).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.CreateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.UpdateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.Version = 0
	// m.Bot = false
	// m.Validated = false
	// m.Roles = nil
	if m, ok := interface{}(m.Providers).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.InternalMetadata).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *UserEmail) JumpShotIndexClear() {
	// m.Id = ""
	// m.Email = ""
}

func (m *UserName) JumpShotIndexClear() {
	// m.Id = ""
	// m.Name = ""
}

func (m *UserProvider) JumpShotIndexClear() {
	// m.Id = ""
	// m.Provider = ""
	// m.Key = ""
	if m, ok := interface{}(m.Metadata).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.CreateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *UserRegisterRequest) JumpShotIndexClear() {
	// m.Id = ""
	// m.Name = ""
	// m.Email = ""
	// m.Password = ""
	// m.Bot = false
	// m.Roles = nil
}
