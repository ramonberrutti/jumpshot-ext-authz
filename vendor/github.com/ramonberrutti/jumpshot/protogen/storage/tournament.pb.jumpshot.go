// Code generated by protoc-gen-jumpshot. DO NOT EDIT.
// source: storage/tournament.proto

package storage

import (
	"context"

	"google.golang.org/grpc"
)

var _ = context.Background()
var _ = grpc.ServiceRegistrar(nil)

func (m *Tournament_Admin) JumpShotIndexClear() {
	// m.Id = ""
}

func (m *Tournament) JumpShotIndexClear() {
	// m.Id = ""
	// m.Name = ""
	// m.Description = ""
	if m, ok := interface{}(m.CreateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.UpdateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.Version = 0
	// m.ParticipantsMode = 0
	if m, ok := interface{}(m.Phases).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.AdditionalMatches = nil
	if m, ok := interface{}(m.Config).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.Admins).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.CreatedBy = ""
	// m.State = 0
	// m.Game = ""
	if m, ok := interface{}(m.MatchConfig).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.Participants = nil
}

func (m *MatchConfiguration) JumpShotIndexClear() {
	if m, ok := interface{}(m.Setup).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.Cancel).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	if m, ok := interface{}(m.SetupResponses).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *TournamentParticipantTeam_Tournament) JumpShotIndexClear() {
	// m.Id = ""
}

func (m *TournamentParticipantTeam) JumpShotIndexClear() {
	// m.Id = ""
	if m, ok := interface{}(m.Tournaments).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.Version = 0
	if m, ok := interface{}(m.UpdateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}

func (m *TournamentParticipantPlayer_Tournament) JumpShotIndexClear() {
	// m.Id = ""
}

func (m *TournamentParticipantPlayer) JumpShotIndexClear() {
	// m.Id = ""
	if m, ok := interface{}(m.Tournaments).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

	// m.Version = 0
	if m, ok := interface{}(m.UpdateTime).(interface{ JumpShotIndexClear() }); ok {
		m.JumpShotIndexClear()
	}

}
